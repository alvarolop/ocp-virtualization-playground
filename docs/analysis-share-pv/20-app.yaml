apiVersion: template.openshift.io/v1
kind: Template
objects:    

  - kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: ${APP_NAME}
      namespace: ${APP_PROJECT}
      labels:
        app: ${APP_NAME}
        app.kubernetes.io/component: ${APP_NAME}
        app.kubernetes.io/instance: ${APP_NAME}
        app.kubernetes.io/name: ${APP_NAME}
        app.kubernetes.io/part-of: ${APP_NAME}-app
        app.openshift.io/runtime: shadowman
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: ${APP_NAME}
      template:
        metadata:
          labels:
            app: ${APP_NAME}
            deployment: ${APP_NAME}
        spec:
          containers:
            - name: ${APP_NAME}
              image: registry.redhat.io/rhel8/support-tools:8.7-10
              command:
                - bash
                - '-c'
                - echo "Hello World!"; while true; do sleep 3600; done
              ports:
                - containerPort: 8080
                  protocol: TCP
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              imagePullPolicy: Always
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                  - ALL
              volumeMounts:
                - name: ${PVC_NAME}
                  mountPath: /mount/extra
          volumes:
            - name: ${PVC_NAME}
              persistentVolumeClaim:
                claimName: ${PVC_NAME}
          restartPolicy: Always
          terminationGracePeriodSeconds: 30
          dnsPolicy: ClusterFirst
          securityContext:
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault


  - kind: Service
    apiVersion: v1
    metadata:
      name: ${APP_NAME}
      namespace: ${APP_PROJECT}
      labels:
        app: ${APP_NAME}
        app.kubernetes.io/component: ${APP_NAME}
        app.kubernetes.io/instance: ${APP_NAME}
        app.kubernetes.io/name: ${APP_NAME}
        app.kubernetes.io/part-of: ${APP_NAME}-app
        app.openshift.io/runtime: shadowman
    spec:
      ports:
        - protocol: TCP
          port: 8080
          targetPort: 8080
      internalTrafficPolicy: Cluster
      type: ClusterIP
      selector:
        app: ${APP_NAME}
        
parameters:
  - name: APP_PROJECT
    description: "The project where the application will be deployed."
    required: false
    value: vms-test
  - name: APP_NAME
    description: "The application name."
    required: false
    value: test-persistence
  - name: PVC_NAME
    description: "The PVC name."
    required: false
    value: efs-shared-filesystem